active: true
build-type: script
cflags: []
cppflags: []
derived: false
do-build: |
  path = "testsuites/libtests/dl10/"
  objs = []
  lib_objs = []
  lib_objs.append(self.cc(bld, bic, path + "dl10-o2.c"))
  lib_objs.append(self.cc(bld, bic, path + "dl10-o4.c"))
  objs.append(self.ar(bld, lib_objs, path + "libdl10_1.a"))
  lib_objs = []
  lib_objs.append(self.cc(bld, bic, path + "dl10-o3.c"))
  lib_objs.append(self.cc(bld, bic, path + "dl10-o5.c"))
  lib_objs.append(self.cc(bld, bic, path + "dl10-o6.c"))
  objs.append(self.ar(bld, lib_objs, path + "libdl10_2.a"))
  objs.append(self.cc(bld, bic, path + "dl10-o1.c"))
  tar = path + "dl10.tar"
  self.pax(bld, [path + "etc/libdl.conf"] + objs, [path], tar)
  tar_c, tar_h = self.bin2c(bld, tar)
  objs = []
  objs.append(self.cc(bld, bic, tar_c))
  objs.append(self.cc(bld, bic, path + "init.c", deps=[tar_h], cppflags=bld.env.TEST_DL10_CPPFLAGS))
  objs.append(self.cc(bld, bic, path + "dl-load.c"))
  dl10_pre = path + "dl10.pre"
  self.link_cc(bld, bic, objs, dl10_pre)
  dl10_sym_o = path + "dl10-sym.o"
  objs.append(dl10_sym_o)
  self.rtems_syms(bld, dl10_pre, dl10_sym_o)
  self.link_cc(bld, bic, objs, "testsuites/libtests/dl10.exe")
do-configure: null
enabled-by:
- and:
  - not: TEST_DL10_EXCLUDE
  - BUILD_LIBDL
header: ''
includes:
- testsuites/libtests/dl10
ldflags: []
level: 1.44
links: []
normative: true
order: 0
prepare-build: null
prepare-configure: null
ref: ''
reviewed: uFogQaG1jGSztDAnaWl8lC2piQmrtzSGBYMX4QWP4jQ=
stlib: []
text: ''
type: build
use-after: []
use-before: []
